# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    app.backend_url: '%env(BACKEND_URL)%'
    app.frontend_url: '%env(FRONTEND_URL)%'
    app.mail_sender: '%env(MAIL_SENDER)%'
    app.mail_sender_name: '%env(MAIL_SENDER_NAME)%'
    app.uploads_directory: '%kernel.project_dir%/%env(UPLOADS_DIRECTORY)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            string $frontendUrl: '%app.frontend_url%'
            string $backendUrl: '%app.backend_url%'
            string $uploadsDirectory: '%app.uploads_directory%'

    _instanceof:
        App\Service\File\Contract\FileProcessor:
            tags: ['app.file_processor']
        App\Service\File\Contract\FileValidator:
            tags: ['app.file_validator']

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'
            - '../src/Repository/EntityRepository.php'

    Symfony\Component\Serializer\NameConverter\CamelCaseToSnakeCaseNameConverter: '@serializer.name_converter.camel_case_to_snake_case'

    App\Normalizer\TimeNormalizer:
        tags:
            - { name: serializer.normalizer, priority: 100 }

    App\EventListener\ExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception, priority: 64 }

    App\EventListener\ClassMetadataListener:
        tags:
            - { name: doctrine.event_listener, event: loadClassMetadata, priority: 64 }

    App\EventListener\TokenRequestListener:
        tags:
            - { name: kernel.event_listener, event: league.oauth2_server.event.token_request_resolve, priority: 64, method: onTokenRequestResolve }

    App\EventListener\KernelRequestListener:
        tags:
            - { name: kernel.event_listener, event: kernel.request, priority: 4 }

    App\Command\LoadFixtures:
        arguments:
            $fixturesDirectory: '%kernel.project_dir%/fixtures'

    App\Repository\RepositoryFactory:
        arguments:
            $container: '@service_container'

    App\Service\Mail\Mailer:
        arguments:
            $sender: '%app.mail_sender%'
            $senderName: '%app.mail_sender_name%'

    App\Service\File\Factory\FileProcessorFactory:
        arguments:
            - !tagged_iterator app.file_processor

    App\Service\File\Factory\FileValidatorFactory:
        arguments:
            - !tagged_iterator app.file_validator

    App\Repository\SecurityUserRepository: ~
    League\OAuth2\Server\Repositories\UserRepositoryInterface: '@App\Repository\SecurityUserRepository'

    League\Bundle\OAuth2ServerBundle\Security\Authenticator\OAuth2Authenticator:
        arguments:
            $httpMessageFactory: '@league.oauth2_server.factory.psr_http'
            $userProvider: '@security.user.provider.concrete.app_user_provider'
            $rolePrefix: 'ROLE_OAUTH2_'
